class I18n{constructor(){this.translations={},this.currentLanguage="en",this.defaultLanguage="en",this.supportedLanguages=["en","de"]}async init(){this.currentLanguage=this.detectLanguage();try{if("de"===this.currentLanguage){const t=await import("./translations-de.min.js");this.translations=t.translations}else{const t=await import("./translations-en.min.js");this.translations=t.translations}}catch(t){console.error("Failed to load translations:",t),this.translations={en:{},de:{}}}}detectLanguage(){if("undefined"!=typeof localStorage){const t=localStorage.getItem("language");if(t&&this.supportedLanguages.includes(t))return t}let t="en";return"undefined"!=typeof navigator&&(t=navigator.language||navigator.userLanguage||"en"),t.startsWith("de")?"de":this.defaultLanguage}async setLanguage(t){if(this.supportedLanguages.includes(t)){this.currentLanguage=t,"undefined"!=typeof localStorage&&localStorage.setItem("language",t);try{let n;n="de"===t?await import("./translations-de.min.js"):await import("./translations-en.min.js"),this.translations=n.translations}catch(n){console.error(`Failed to load translations for ${t}:`,n)}return!0}return!1}t(t){return this.translations[this.currentLanguage]&&this.translations[this.currentLanguage][t]?this.translations[this.currentLanguage][t]:this.translations.en&&this.translations.en[t]?this.translations.en[t]:t}getCurrentLanguage(){return this.currentLanguage}getSupportedLanguages(){return this.supportedLanguages}}const i18n=new I18n;i18n.initialized=i18n.init(),"undefined"!=typeof window&&(window.i18n=i18n),"undefined"!=typeof module&&module.exports&&(module.exports=i18n);export default i18n;